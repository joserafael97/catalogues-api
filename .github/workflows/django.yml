name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
    - name: Login to Heroku Container registry
      env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:login 
    - name: Build and push
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web 
    - name: Release
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web 
    - name: Makemigration
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run:  heroku run python manage.py makemigrations --settings=catalogues.settings.production -a ${{ secrets.HEROKU_APP_NAME }}
    - name: Update Migration
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run:  heroku run python manage.py migrate --settings=catalogues.settings.production -a ${{ secrets.HEROKU_APP_NAME }}
    - name: Update collectstatic
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run:  heroku run  python manage.py collectstatic --noinput --clear -a ${{ secrets.HEROKU_APP_NAME }}


